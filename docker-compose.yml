version: "3.0"

services:
  wavefront:
    image: wavefronthq/proxy
    ports:
      - 2878:2878
      - 9411:9411
    environment:
      WAVEFRONT_PROXY_ARGS: --traceZipkinListenerPorts 9411
    #  WAVEFRONT_URL: https://${WAVEFRONT_TENANT}.wavefront.com/
    #  WAVEFRONT_TOKEN: ${WAVEFRONT_TOKEN}
    #  WAVEFRONT_PROXY_ARGS: --traceZipkinListenerPorts 9411
    env_file: wavefront.env 


  telegraf:
    image: telegraf
    depends_on: 
      - wavefront
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    ports:
      - 1433:1433
    volumes:
      # - ./data/sqlserver:/var/opt/mssql
      - sqlServerData:/var/opt/mssql
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: P@ssword

  configserver:
    image: steeltoeoss/config-server
    restart: always
    ports:
      - "8888:8888"
    volumes: 
      - ./config:/config
    #environment:
      #SPRING_CLOUD_CONFIG_SERVER_GIT_URI: https://github.com/tanzu-solutions-engineering/funny-quotes-config
      #SPRING_PROFILES_ACTIVE: git
      #SPRING_CLOUD_CONFIG_SERVER_NATIVE_SEARCH_LOCATIONS: /config
      #SPRING_PROFILES_ACTIVE: native
    env_file: config-server.env

  eureka:
    image: steeltoeoss/eurekaserver
    environment: 
      eureka_server_enableSelfPreservation: "false" # we want things to get kicked out of the registry when app is shut down
    ports:
      - "8761:8761"

  hystrix:
    image: kennedyoliveira/hystrix-dashboard
    ports:
      - "7979:7979"

  rabbitmq:
    image: rabbitmq:3-management
    ports: 
      - 8084:15672
      - 15672:15672
      - 5672:5672

  eventstore:
    image: eventstore/eventstore
    ports:
      - "2113:2113"
      - "8086:2113"
      - "1113:1113"
    environment:
      EVENTSTORE_RUN_PROJECTIONS: All
    volumes:
      - ./data/eventstore:/var/lib/eventstore

  mysql:
     image: mysql:5.7
     volumes:
       - ./data/mysql:/var/lib/mysql
     ports:
       - "3306:3306"
     environment:
       MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on: 
      - mysql
    environment:
     - PMA_HOST=mysql
     - PMA_USER=root
     - PMA_PASSWORD=
    restart: always
    ports:
     - 8083:80
    volumes:
     - /sessions

  redis:
    image: redis
    ports:
      - "6379:6379"
      
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    depends_on: 
      - redis
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - 8081:8081
      
  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin

  mongo-express:
    image: mongo-express
    restart: always
    depends_on: 
      - mongo
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin

  omnidb: 
    image: taivokasper/omnidb
    #image: omnidb
    volumes:
      - ./data/omnidb:/etc/omnidb
    ports:
      - 8085:8080
      - 25482:25482

  postgresql:
    image: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: concourse
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      PGDATA: /database
    volumes:
      - postgres:/database

  concourse:
    image: concourse/concourse
    command: quickstart
    privileged: true
    depends_on: [postgres]
    ports: ["8087:8080"]
    environment:
      CONCOURSE_POSTGRES_HOST: postgres
      CONCOURSE_POSTGRES_USER: admin
      CONCOURSE_POSTGRES_PASSWORD: admin
      CONCOURSE_POSTGRES_DATABASE: concourse
      CONCOURSE_EXTERNAL_URL: http://localhost:8087
      CONCOURSE_ADD_LOCAL_USER: test:test
      CONCOURSE_MAIN_TEAM_LOCAL_USER: test
      CONCOURSE_WORKER_BAGGAGECLAIM_DRIVER: overlay
  axon-server:
    image: axoniq/axonserver
    ports: 
      - 8024:8024
      - 8124:8124
  oracle:
    image: store/oracle/database-enterprise:12.2.0.1
    restart: always
    ports:
      - 1521:1521
    environment:
      ORACLE_PWD: admin
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
  gitea:
    image: gitea/gitea:1.12.4
    volumes:
      - ./data:/data
    ports:
      - "3000:3000"
      - "22:22"
    depends_on:
      - mysql
    restart: always

volumes:
  mySqlData:
  sqlServerData:
  postgres: